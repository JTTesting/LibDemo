name: Build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  packages: write

env:
  BUILD_ENVIRONMENT: GitHub
  
jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
        if: always()

      - name: Check file location
        run: |
          $csprojPath = "D:\a\LibDemo\LibDemo\LibDemo"
          cd $csprojPath
          dir
          cd ..
          dir
          cd ..
          dir

      - name: Extract Version from .csproj
        id: extract_version
        run: |
          # Replace 'YourProject.csproj' with the actual .csproj filename
          $csprojPath = ".\${{github.event.repository.name}}\${{github.event.repository.name}}.csproj"
          [xml]$csproj = Get-Content $csprojPath
          $version = $csproj.Project.PropertyGroup.Version
          echo "Version: $version"
          echo "VERSION=$version" >> $env:GITHUB_ENV

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore "${{github.workspace}}/LibDemo.sln"

      - name: Build
        run: dotnet build "${{github.workspace}}/LibDemo.sln"  --no-restore --configuration Release

      - name: Publish
        run: dotnet publish "${{github.workspace}}/LibDemo/LibDemo.csproj" -c Release -o libdemo

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{github.event.repository.name}}-DEV"
          path: libdemo/**
          if-no-files-found: error

      - name: NuGet Login
        env: 
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/JTTesting/index.json"
      
      - name: Publish NuGet Package
        run: dotnet nuget push "${{github.workspace}}/LibDemo/bin/Release/LibDemo.$env:VERSION.nupkg" --source "github"

      - name: Dump GitHub context2
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
        if: always()
